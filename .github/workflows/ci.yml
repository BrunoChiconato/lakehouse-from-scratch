name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Java (for PySpark)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "11"

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install project (dev) + build tool
        run: |
          python -m pip install --upgrade pip
          pip install build
          pip install -e ".[dev]"

      - name: Lint with Ruff
        run: |
          ruff check .
          ruff format . --check

      - name: Run tests with coverage
        run: |
          pytest --cov --cov-branch --cov-report=xml tests/

      - name: Upload coverage to Codecov
        if: env.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          slug: BrunoChiconato/lakehouse-from-scratch

      - name: Install Databricks CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          databricks --version

      - name: Build wheel (dist/)
        run: python -m build --wheel

      - name: Capture wheel filename
        id: wheel
        run: |
          WHEEL_NAME="$(ls -t dist/*.whl | head -n1 | xargs -n1 basename)"
          echo "WHEEL_NAME=$WHEEL_NAME" >> $GITHUB_ENV
          echo "Wheel: $WHEEL_NAME"

      - name: Validate bundle (dev)
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: databricks bundle validate -t dev

      - name: Deploy bundle (dev)
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks bundle deploy -t dev -v wheel_file_name="${{ env.WHEEL_NAME }}"

      - name: Run pipeline (bronze→silver→gold→qa)
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks bundle run -t dev lakehouse-pipeline --refresh-all
